// This is a CSGO config file that can be pasted into CSGO's console line by
// line to execute it. For a description of the original and readable version of
// this script, take a look at the ".nut" version of this file.

// This ".cfg" version has the advantage that it doesn't cause players to get
// kicked from online servers after using this script in a local server.
// The same cannot be said for the ".nut" version.

// Limitations of a ".cfg" script:
//   - Max line length that CSGO console accepts is 255
//   - No semicolons are allowed within script commands
//   - 'local' can't be used
//   - sequential statements each need to be surrounded by curly brackets

script function dzsdr1_get_player(){{DZSDR1_X=null}while(DZSDR1_X=Entities.FindByClassname(DZSDR1_X,"player")){if(DZSDR1_X.GetTeam()==2||DZSDR1_X.GetTeam()==3){return DZSDR1_X}}return null}
script function dzsdr1_vec_data(x){return x.x+" "+x.y+" "+x.z}function dzsdr1_check_loop_end() {if(Time()>DZSDR1_KEEP_ALIVE_UNTIL){if(DZSDR1_TIMER&&DZSDR1_TIMER.IsValid()){DZSDR1_TIMER.Destroy()}}}
script function dzsdr1_player_data(p){return "player "+dzsdr1_vec_data(p.GetOrigin())+" "+(p.EyePosition().z+0.062561)+" "+(p.GetBoundingMaxs().z<72)+" "+dzsdr1_vec_data(p.GetVelocity())+"\n"}
script function dzsdr1_bm_data_pt1(){{DZSDR1_MSG+="bm "+DZSDR1_X.entindex()+" "+dzsdr1_vec_data(DZSDR1_X.GetOrigin())+" "+dzsdr1_vec_data(DZSDR1_X.GetAngles())+"\n"}{DZSDR1_CNT+=1}}
script function dzsdr1_bm_data(){{DZSDR1_CNT=0}{DZSDR1_X=null}while(DZSDR1_CNT<21&&(DZSDR1_X=Entities.FindByClassname(DZSDR1_X,"bumpmine_projectile"))){dzsdr1_bm_data_pt1()}}
script function dzsdr1_loop_tick_pt1(){{DZSDR1_MSG="dzs-dr-v1-tick-start "+DZSDR1_TICK_CNT+"\n"}{DZSDR1_PLAYER=dzsdr1_get_player()}{if(DZSDR1_PLAYER)DZSDR1_MSG+=dzsdr1_player_data(DZSDR1_PLAYER)}{dzsdr1_bm_data()}{DZSDR1_MSG+="dzs-dr-v1-tick-end\n"}}
script function dzsdr1_loop_tick_pt2(){{print(DZSDR1_MSG)}{SendToConsole("echo;sv_cheats 1;getpos;")}{DZSDR1_TICK_CNT=(DZSDR1_TICK_CNT+1)%100}{dzsdr1_check_loop_end()}}function dzsdr1_loop_tick(){{dzsdr1_loop_tick_pt1()}{dzsdr1_loop_tick_pt2()}}
script function dzsdr1_start_pt1(){{DZSDR1_TICK_CNT<-0}{DZSDR1_KEEP_ALIVE_UNTIL<-Time()+10.0}{DZSDR1_PLAYER<-null}{DZSDR1_CNT<-0}{DZSDR1_MSG<-""}{DZSDR1_X<-null}{while(DZSDR1_X=Entities.FindByName(DZSDR1_X,"dzsdr1_timer"))DZSDR1_X.Destroy()}}
script function dzsdr1_start_pt2(){{DZSDR1_TIMER<-Entities.CreateByClassname("logic_timer")}{DZSDR1_TIMER.ConnectOutput("OnTimer","OnTimer")}{DZSDR1_TIMER.__KeyValueFromString("classname","info_target")}}
script function dzsdr1_start_pt3(){{DZSDR1_TIMER.__KeyValueFromString("targetname","dzsdr1_timer")}{DZSDR1_TIMER.__KeyValueFromFloat("refiretime",0.0)}{DZSDR1_TIMER.ValidateScriptScope()}{DZSDR1_TIMER.GetScriptScope().OnTimer<-dzsdr1_loop_tick}}
script function dzsdr1_start(){{dzsdr1_start_pt1()}{dzsdr1_start_pt2()}{dzsdr1_start_pt3()}{EntFireByHandle(DZSDR1_TIMER,"Enable","",0.0,null,null)}}{dzsdr1_start()}
